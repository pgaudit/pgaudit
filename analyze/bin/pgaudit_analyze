#!/usr/bin/perl
####################################################################################################################################
# pgaudit_analyze - Log analyzer for pgaudit
####################################################################################################################################

####################################################################################################################################
# Perl includes
####################################################################################################################################
use strict;
use warnings FATAL => qw(all);
use Carp qw(confess);

use DBI;
use File::Basename qw(dirname);
#use Getopt::Long qw(GetOptions);

use lib dirname($0) . '/../lib';
use PgAudit::CSV;

####################################################################################################################################
# Handle die as a confess instead to get more detailed error information
####################################################################################################################################
$SIG{__DIE__} = sub { Carp::confess @_ };


####################################################################################################################################
# Connect to Postgres
####################################################################################################################################
my $hDb = DBI->connect('dbi:Pg:dbname=pgaudit;port=5432', 'postgres', undef, {AutoCommit => 0});

use constant
{
    FIELD_TIMESTAMP => 0
};

####################################################################################################################################
# Main loop
####################################################################################################################################
# Open the ini file for reading
my $hFile;

print "opening $ARGV[0]";

if (!defined($ARGV[0]))
{
    confess "file to parse must be passed";
}

open($hFile, '<', $ARGV[0])
    or confess "unable to open $ARGV[0]";

# Read the log file
my $oCSV = new PgAudit::CSV({binary => 1});

while (my $stryRow = $oCSV->getline($hFile))
{
   print "time " . $$stryRow[FIELD_TIMESTAMP] . "\n";
}

if ($!)
{
    confess $!;
}

close($hFile);
